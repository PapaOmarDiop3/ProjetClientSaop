package serveur;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;

@WebService(serviceName="Etudiant_Service")
public class Enseignant_Service {

    private static final List<Enseignant> etudiants = new ArrayList<>();

    // Ajouter un étudiant
    @WebMethod
    public Enseignant ajouter_Etudiant(@WebParam(name="matricule") String matricule,
                                     @WebParam(name="nom") String nom,
                                     @WebParam(name="prenom") String prenom,
                                     @WebParam(name="filiere") String filiere) {
        Enseignant etudiant = new Enseignant();
        etudiant.setMatricule(matricule);
        etudiant.setNom(nom);
        etudiant.setPrenom(prenom);
        etudiant.setFiliere(filiere);
        etudiants.add(etudiant);
        return etudiant;
    }

    // Lister tous les étudiants
    @WebMethod
    public List<Enseignant> lister_Etudiant() {
        return etudiants;
    }

    // Rechercher un étudiant
    @WebMethod
    public Enseignant rechercher_Etudiant(@WebParam(name="matricule") String matricule) {
        for (Enseignant e : enseignants) {
            if (e.getMatricule().equals(matricule)) {
                return e; // Retourne l'étudiant trouvé
            }
        }
        return null; // Aucun étudiant trouvé
    }

    // Modifier un étudiant
    @WebMethod
    public Enseignant modifier_Etudiant(@WebParam(name="matricule") String matricule,
                                      @WebParam(name="nom") String nom,
                                      @WebParam(name="prenom") String prenom,
                                      @WebParam(name="filiere") String filiere) {
        for (Enseignant e : enseignants) {
            if (e.getMatricule().equals(matricule)) {
                e.setNom(nom);
                e.setPrenom(prenom);
                e.setFiliere(filiere);
                return e; // Retourne l'étudiant modifié
            }
        }
        return null; // Aucun étudiant trouvé
    }

    // Supprimer un étudiant
    @WebMethod
    public String supprimer_Etudiant(@WebParam(name="matricule") String matricule) {
        Iterator<Enseignant> iterator = etudiants.iterator();
        while (iterator.hasNext()) {
            Enseignant e = iterator.next();
            if (e.getMatricule().equals(matricule)) {
                iterator.remove();
                return matricule; // Retourne le matricule de l'étudiant supprimé
            }
        }
        return "Etudiant non trouvé"; // Aucun étudiant trouvé
    }
}
